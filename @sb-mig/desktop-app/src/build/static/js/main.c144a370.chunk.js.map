{"version":3,"sources":["components/Header/index.js","components/Explorer/Sidebar/index.js","components/Explorer/Content/Destinations/index.js","components/Explorer/Content/GeneralInfo/index.js","components/Explorer/Content/LocalFiles/index.js","components/Explorer/index.js","components/Preview/index.js","images/browser-help.png","components/Browser/index.js","App.js","reportWebVitals.js","OBS/context.js","index.js"],"names":["streamSourceEnum","sendCommand","obs","command","params","a","send","console","log","setScene","e","sceneName","Header","props","changeScene","camera","className","onClick","onChangeStreamSource","type","Sidebar","onChangeContentTo","contentEnum","destinations","generalInfo","localFiles","Destinations","destinationFiles","map","file","GeneralInfo","generalInfoFiles","LocalFiles","files","onSetSource","sourceName","name","path","fs","window","require","Explorer","useState","whichContent","setWhichContent","folderSelected","setFolderSelected","setFiles","useEffect","pathToDir","dirname","resolve","readdir","err","items","i","length","stat","stats","isFile","content","getContent","style","display","justifyContent","alignItems","htmlFor","onChange","event","temp","Object","entries","target","filter","webkitdirectory","directory","multiple","Preview","screenshot","src","img","alt","Browser","href","rel","browserHelp","App","streamSource","setStreamSource","setScreenshot","useMemo","OBSWebSocket","connect","address","password","then","disconnect","setSource","takeSourceScreenshot","sourceSettings","local_file","data","embedPictureFormat","width","height","source","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","OBSContext","createContext","OBSContextProvider","obsContext","Provider","value","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c144a370.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const streamSourceEnum = {\n  browser: \"browser\",\n  library: \"library\"\n}\n\n// OBS functions\nexport async function sendCommand(obs, command, params) {\n  try {\n    return await obs.send(command, params || {});\n  } catch (e) {\n    console.log(\"Error sending command\", command, \" - error is:\", e);\n    return {};\n  }\n}\n\nexport async function setScene(obs, e, sceneName) {\n  await sendCommand(obs, \"SetCurrentScene\", { \"scene-name\": sceneName });\n}\n\nconst Header = (props) => {\n  const changeScene = async (e, camera) => {\n    await setScene(props.obs, e, camera);\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo-header\">\n        <div className=\"ef-row\">\n          <div className=\"ef-col u-p-s u-f-light\">Virtual Office</div>\n        </div>\n      </div>\n      <div className=\"ef-container\">\n        <section className=\"ef-section -s\">\n          <div className=\"ef-row\">\n            <div className=\"ef-col -s-3\">\n              <div className=\"ef-button-group -condensed\">\n                <button onClick={() => props.onChangeStreamSource(streamSourceEnum.library)} type=\"button\" className=\"ef-button -secondary -square\">\n                  <span className=\"ef-button__content\">Library</span>\n                </button>\n                <button onClick={() => props.onChangeStreamSource(streamSourceEnum.browser)} type=\"button\" className=\"ef-button -secondary -square\">\n                  <span className=\"ef-button__content\">Browser</span>\n                </button>\n              </div>\n            </div>\n            <div className=\"ef-col -s-3\">\n              <div className=\"ef-button-group -condensed\">\n                <button\n                  onClick={(e) => changeScene(e, \"Share Screen\")}\n                  type=\"button\"\n                  className=\"ef-button -secondary -square\"\n                >\n                  <span className=\"ef-button__content\">Share Screen</span>\n                </button>\n                <button type=\"button\" className=\"ef-button -secondary -square\">\n                  <span className=\"ef-button__content\">Mic</span>\n                </button>\n              </div>\n            </div>\n\n            <div className=\"ef-col -s-offset-3 -s-3\">\n              <div className=\"ef-button-group -condensed\">\n                <button\n                  onClick={(e) => changeScene(e, \"First Camera\")}\n                  type=\"button\"\n                  className=\"ef-button -secondary -square\"\n                >\n                  <span className=\"ef-button__content\">First</span>\n                </button>\n                <button\n                  onClick={(e) => changeScene(e, \"Second Camera\")}\n                  type=\"button\"\n                  className=\"ef-button -secondary -square\"\n                >\n                  <span className=\"ef-button__content\">Second</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport IconGrid2 from \"@ef-gc/web-ui-react/lib/icons/IconGrid2\";\nimport IconMediaLibraryOutline from \"@ef-gc/web-ui-react/lib/icons/IconMediaLibraryOutline\";\nimport { contentEnum } from \"../index\";\n\nconst Sidebar = (props) => {\n  return (\n    <div className=\"sidebar\">\n      <ul>\n        <li>\n          <button\n            onClick={() => props.onChangeContentTo(contentEnum.destinations)}\n            type=\"button\"\n            className=\"ef-button -secondary -small -square\"\n          >\n            <IconMediaLibraryOutline />\n            <span className=\"ef-button__content u-s-pl-xs\">Destinations</span>\n          </button>\n        </li>\n        <li>\n          <button\n            onClick={() => props.onChangeContentTo(contentEnum.generalInfo)}\n            type=\"button\"\n            className=\"ef-button -secondary -small -square\"\n          >\n            <IconGrid2 />\n            <span className=\"ef-button__content u-s-pl-xs\">General Info</span>\n          </button>\n        </li>\n        <li>\n          <button\n            onClick={() => props.onChangeContentTo(contentEnum.localFiles)}\n            type=\"button\"\n            className=\"ef-button -secondary -small -square\"\n          >\n            <IconGrid2 />\n            <span className=\"ef-button__content u-s-pl-xs\">Local Files</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport IconAcademicMaterial from \"@ef-gc/web-ui-react/lib/icons/IconAcademicMaterial\";\n\nconst Destinations = (props) => {\n  const { destinationFiles } = props;\n  \n  return (\n    <div>\n      <div className=\"destinations ef-row\">\n        {destinationFiles.map((file) => {\n          return (\n            <div key={file}>\n              <div className=\"content-tile\">\n                <IconAcademicMaterial />\n              </div>\n              <p className=\"para\">This is file</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Destinations;\n","import React from \"react\";\nimport IconCheckCircleOutline from \"@ef-gc/web-ui-react/lib/icons/IconCheckCircleOutline\";\n\nconst GeneralInfo = (props) => {\n  const { generalInfoFiles } = props;\n\n  return (\n    <div>\n      <div className=\"ef-row\">\n        {generalInfoFiles.map((file) => {\n          return (\n            <div className=\"ef-col\" key={file}>\n              <div className=\"content-tile\">\n                <IconCheckCircleOutline />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralInfo;\n","import React from \"react\";\nimport IconAlertCircleOutline from \"@ef-gc/web-ui-react/lib/icons/IconAlertCircleOutline\";\n\n// const electron = window.require(\"electron\");\n// const handleSomething = () => {\n//   console.log(\"clicking ?\");\n//   const args = [1, 2, 3, 4];\n//   electron.ipcRenderer.invoke(\"perform-action\", ...args);\n// };\n\nconst LocalFiles = (props) => {\n  const { files, onSetSource } = props;\n\n  return (\n    <div>\n      <div className=\"ef-row\">\n        {files.map((file) => {\n          return (\n            <div key={`${file.path}`}>\n              <div\n                className=\"content-tile\"\n                onClick={(e) =>\n                  onSetSource({\n                    e,\n                    sourceName: \"Video Source\",\n                    file,\n                  })\n                }\n              >\n                <IconAlertCircleOutline />\n              </div>\n              <p className=\"para\">{file.name}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default LocalFiles;\n","import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Destinations from \"./Content/Destinations\";\nimport GeneralInfo from \"./Content/GeneralInfo\";\nimport LocalFiles from \"./Content/LocalFiles\";\n\nconst fs = window.require(\"fs\");\nconst path = window.require(\"path\");\n\nexport const contentEnum = {\n  destinations: 0,\n  generalInfo: 1,\n  localFiles: 2,\n};\n\nconst destinationFiles = [1, 2, 3, 4, 5, 6, 7];\nconst generalInfoFiles = [1, 2, 3, 4];\n\nconst Explorer = (props) => {\n  const [whichContent, setWhichContent] = useState(contentEnum.destinations);\n  const [folderSelected, setFolderSelected] = useState(false);\n  const [files, setFiles] = useState([]);\n  const { obs, onSetSource } = props;\n\n  useEffect(() => {\n    const pathToDir = \"/Users/marckraw/virtual-office/destinations\";\n\n    console.log(\"useEffect from destinations\");\n    console.log(\"dirname: \", path.dirname(pathToDir));\n    console.log(\"absolute path: \", path.resolve(\"./index.html\"));\n\n    fs.readdir(pathToDir, function (err, items) {\n      for (var i = 0; i < items.length; i++) {\n        var file = pathToDir + \"/\" + items[i];\n        console.log(\"Start: \" + file);\n\n        // eslint-disable-next-line\n        fs.stat(file, function (err, stats) {\n          console.log(file);\n          console.log(stats.isFile());\n        });\n      }\n    });\n  }, []);\n\n  const changeContentTo = (content) => {\n    setWhichContent(content);\n  };\n\n  const onFolderSelect = (event) => {\n    const entries = Object.entries(event.target.files);\n    const temp = entries\n      .filter((file) => file[1].name[0] !== \".\")\n      .map((file) => file[1]);\n    setFiles(temp);\n    setFolderSelected(true);\n  };\n\n  const getContent = (files) => {\n    let content;\n    switch (whichContent) {\n      case contentEnum.destinations:\n        content = <Destinations destinationFiles={destinationFiles} />;\n        break;\n      case contentEnum.generalInfo:\n        content = <GeneralInfo generalInfoFiles={generalInfoFiles} />;\n        break;\n      case contentEnum.localFiles:\n        content = (\n          <LocalFiles files={files} obs={obs} onSetSource={onSetSource} />\n        );\n        break;\n      default:\n        content = <Destinations />;\n        break;\n    }\n\n    return content;\n  };\n\n  return (\n    <div>\n      <div className=\"ef-container\">\n        <section className=\"ef-section -s\">\n          {folderSelected ? (\n            <div className=\"ef-row\">\n              <div className=\"ef-col -s-3\">\n                <Sidebar onChangeContentTo={changeContentTo} />\n              </div>\n              <div className=\"ef-col -s-9\">\n                <div>{getContent(files)}</div>\n              </div>\n            </div>\n          ) : (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <label htmlFor=\"select-folder\" />\n              <input\n                name=\"select-folder\"\n                type=\"file\"\n                onChange={onFolderSelect}\n                webkitdirectory=\"true\"\n                directory=\"true\"\n                multiple=\"true\"\n              />\n              select folder\n            </div>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Explorer;\n","import React from \"react\";\n\nconst Preview = (props) => {\n  const { screenshot } = props;\n\n  return (\n    <section className=\"content-preview ef-section -xl\">\n      {screenshot ? <img src={screenshot.img} alt=\"Preview\" />  : \"No media selected\"}\n    </section>\n  );\n};\n\nexport default Preview;\n","export default __webpack_public_path__ + \"static/media/browser-help.234e9357.png\";","import React from \"react\";\nimport IconExternalLink from \"@ef-gc/web-ui-react/lib/icons/IconExternalLink\";\nimport browserHelp from '../../images/browser-help.png';\n\nconst Browser = () => {\n  // async function getSourceSettings({ e, sourceName }) {\n  //   const data = await props.obs.send(\"GetSourceSettings\", {\n  //     sourceName: sourceName,\n  //   });\n  //   console.log(\"asdasd\");\n  //   console.log(data);\n  // }\n\n  // async function setSourceSettingsToFirst({ e, sourceName }) {\n  //   const data = await props.obs.send(\"SetSourceSettings\", {\n  //     sourceName: sourceName,\n  //     sourceSettings: {\n  //       local_file: \"/Users/marckraw/Projects/OBS/first-movie.mov\",\n  //     },\n  //   });\n  //   console.log(`I've set source to ${data.sourceSettings.local_file}`);\n  // }\n\n  return (\n    <>\n      <section className=\"browser-preview ef-section -s\">\n        <div className=\"ef-container\">\n          <div className=\"ef-row\">\n            <div className=\"ef-col -s-6\">\n              <a alt=\"link\" href=\"https://www.youtube.com/user/slipstreamsportsllc\" target=\"_blank\" rel=\"noreferrer\" className=\"ef-button -secondary -square\">\n                <span className=\"ef-button__content u-s-pr-xs\">EF YouTube</span>{\" \"}\n                <IconExternalLink />\n              </a>\n            </div>\n            <div className=\"ef-col -s-6\">\n              <a alt=\"link\" href=\"https://www.google.com\" className=\"ef-button -secondary -square\">\n                <span className=\"ef-button__content u-s-pr-xs\">Poseidon</span>{\" \"}\n                <IconExternalLink />\n              </a>\n            </div>\n          </div>\n          <div className=\"ef-row\">\n            <div className=\"ef-col -s-6\">\n              <a alt=\"link\" href=\"https://www.google.com\" className=\"ef-button -secondary -square\">\n                <span className=\"ef-button__content u-s-pr-xs\">\n                  Campus Connect\n                </span>{\" \"}\n                <IconExternalLink />\n              </a>\n            </div>\n            <div className=\"ef-col -s-6\">\n              <a alt=\"link\" href=\"https://www.google.com\" className=\"ef-button -secondary -square\">\n                <span className=\"ef-button__content u-s-pr-xs\">Juno</span>{\" \"}\n                <IconExternalLink />\n              </a>\n            </div>\n          </div>\n          <div className=\"ef-row\">\n            <div className=\"ef-col -s-6\">\n              <a alt=\"link\" href=\"https://www.google.com\" className=\"ef-button -secondary -square\">\n                <span className=\"ef-button__content u-s-pr-xs\">Themis</span>{\" \"}\n                <IconExternalLink />\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"ef-section -s\">\n        <div className=\"ef-container\">\n          <div className=\"ef-row\">\n            <div className=\"browser-help\">\n              <h3 className=\"ef-h5\">\n                Pleasu use the browser on the secondary screen for sharing.\n              </h3>\n              <img\n                src={browserHelp}\n                alt=\"This is browser help\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Browser;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport OBSWebSocket from \"obs-websocket-js\";\n\nimport Header, { streamSourceEnum } from \"./components/Header\";\nimport Explorer from \"./components/Explorer\";\nimport Preview from \"./components/Preview\";\nimport Browser from './components/Browser';\n\nconst App = () => {\n  const [streamSource, setStreamSource] = useState(streamSourceEnum.library);\n  const [screenshot, setScreenshot] = useState(null);\n  const obs = useMemo(() => new OBSWebSocket(), []);\n  const obsAdress = \"localhost:4444\";\n  const obsPassword = \"\";\n\n  useEffect(() => {\n    //stuff that happens upon initial render\n    ///and subsequent re-renders\n    //e.g. make a fetch request, open a socket connection\n    obs\n      .connect({\n        address: obsAdress,\n        password: obsPassword,\n      })\n      .then(() => {\n        console.log(`Success! We're connected & authenticated.`);\n        //console.log(obs.send('GetSceneList'));\n        return obs.send(\"GetSceneList\");\n      });\n    return () => {\n      //stuff that happens when the component unmounts\n      //e.g. close socket connection\n      obs.disconnect();\n    };\n  }, [obs]);\n\n  const changeStreamSource = (source) => {\n    setStreamSource(source)\n  }\n\n  const setSource = async ({ e, sourceName, file }) => {\n    takeSourceScreenshot(sourceName);\n    const data = await obs.send(\"SetSourceSettings\", {\n      sourceName,\n      sourceSettings: {\n        local_file: file.path,\n      },\n    });\n\n    console.log(`I've set source to ${data.sourceSettings.local_file}`);\n  };\n\n  const takeSourceScreenshot = async (sourceName) => {\n    const temp = await obs.send(\"TakeSourceScreenshot\", {\n      sourceName,\n      embedPictureFormat: \"jpeg\",\n      width: 960,\n      height: 540,\n    });\n\n    setScreenshot(temp);\n  };\n\n  return (\n    <div>\n      <Header onChangeStreamSource={changeStreamSource} obs={obs} />\n\n      {streamSource === streamSourceEnum.library ? (\n        <>\n          <Preview obs={obs} screenshot={screenshot} />\n          <Explorer obs={obs} onSetSource={setSource} />\n        </>\n      ) : (\n        <Browser />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext, useState } from \"react\";\nimport OBSWebSocket from \"obs-websocket-js\";\n\nconst OBSContext = createContext({ obs: null });\n\nconst OBSContextProvider = (props) => {\n  const [obsContext, ] = useState(\n    new OBSWebSocket().connect({ address: \"localhost:4444\" })\n  );\n\n  return (\n    <OBSContext.Provider value={obsContext}>\n      {props.children}\n    </OBSContext.Provider>\n  );\n};\n\nexport { OBSContext, OBSContextProvider };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\n// import StartUp from './StartUp';\nimport reportWebVitals from './reportWebVitals';\nimport { OBSContextProvider } from \"./OBS/context\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//   <OBSContextProvider>\n//     <StartUp />\n//     </OBSContextProvider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n  <OBSContextProvider>\n    <App />\n    </OBSContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}